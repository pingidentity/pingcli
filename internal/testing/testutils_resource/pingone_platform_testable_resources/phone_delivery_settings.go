// Copyright Â© 2025 Ping Identity Corporation
// Code generated by ping-cli-generator

package pingone_platform_testable_resources

import (
	"testing"

	"github.com/patrickcping/pingone-go-sdk-v2/management"
	"github.com/pingidentity/pingcli/internal/connector"
	"github.com/pingidentity/pingcli/internal/connector/common"
	"github.com/pingidentity/pingcli/internal/connector/pingone/platform/resources"
	"github.com/pingidentity/pingcli/internal/testing/testutils_resource"
	"github.com/pingidentity/pingcli/internal/utils"
)

func PhoneDeliverySettings(t *testing.T, clientInfo *connector.ClientInfo) *testutils_resource.TestableResource {
	t.Helper()

	return &testutils_resource.TestableResource{
		ClientInfo:         clientInfo,
		CreateFunc:         createPhoneDeliverySettings,
		DeleteFunc:         deletePhoneDeliverySettings,
		Dependencies:       nil,
		ExportableResource: resources.PhoneDeliverySettings(clientInfo),
	}
}

func createPhoneDeliverySettings(t *testing.T, clientInfo *connector.ClientInfo, resourceType string, strArgs ...string) testutils_resource.ResourceInfo {
	t.Helper()

	if len(strArgs) != 0 {
		t.Errorf("Unexpected number of arguments provided to createPhoneDeliverySettings(): %v", strArgs)

		return testutils_resource.ResourceInfo{}
	}

	request := clientInfo.PingOneApiClient.ManagementAPIClient.PhoneDeliverySettingsApi.CreatePhoneDeliverySettings(clientInfo.PingOneContext, clientInfo.PingOneExportEnvironmentID)
	clientStruct := management.NotificationsSettingsPhoneDeliverySettings{
		NotificationsSettingsPhoneDeliverySettingsCustom: &management.NotificationsSettingsPhoneDeliverySettingsCustom{
			Provider: management.ENUMNOTIFICATIONSSETTINGSPHONEDELIVERYSETTINGSPROVIDER_PROVIDER,
			Name:     "CustomProviderName1",
			Authentication: management.NotificationsSettingsPhoneDeliverySettingsCustomAllOfAuthentication{
				Method:   management.ENUMNOTIFICATIONSSETTINGSPHONEDELIVERYSETTINGSCUSTOMAUTHMETHOD_BASIC,
				Username: utils.Pointer("testUsername"),
				Password: utils.Pointer("testPassword1"),
			},
			Requests: []management.NotificationsSettingsPhoneDeliverySettingsCustomRequest{
				{
					DeliveryMethod: management.ENUMNOTIFICATIONSSETTINGSPHONEDELIVERYSETTINGSCUSTOMDELIVERYMETHOD_SMS,
					Url:            "https://example.com/message",
					Method:         management.ENUMNOTIFICATIONSSETTINGSPHONEDELIVERYSETTINGSCUSTOMREQUESTMETHOD_POST,
					Body:           utils.Pointer("messageType=ARN&message=${message}&phoneNumber=${to}&sender=${from}"),
					Headers: &map[string]string{
						"content-type": "application/json",
					},
					PhoneNumberFormat: management.ENUMNOTIFICATIONSSETTINGSPHONEDELIVERYSETTINGSCUSTOMNUMBERFORMAT_FULL,
				},
				{
					DeliveryMethod: management.ENUMNOTIFICATIONSSETTINGSPHONEDELIVERYSETTINGSCUSTOMDELIVERYMETHOD_VOICE,
					Url:            "https://example.com/voice",
					Method:         management.ENUMNOTIFICATIONSSETTINGSPHONEDELIVERYSETTINGSCUSTOMREQUESTMETHOD_POST,
					Body:           utils.Pointer("messageType=ARN&message=${message}&phoneNumber=${to}&sender=${from}"),
					Headers: &map[string]string{
						"content-type": "application/json",
					},
					PhoneNumberFormat: management.ENUMNOTIFICATIONSSETTINGSPHONEDELIVERYSETTINGSCUSTOMNUMBERFORMAT_FULL,
				},
			},
			Numbers: []management.NotificationsSettingsPhoneDeliverySettingsCustomNumbers{
				{
					Type:      management.ENUMNOTIFICATIONSSETTINGSPHONEDELIVERYSETTINGSCUSTOMNUMBERSTYPE_PHONE_NUMBER,
					Number:    "12164081234",
					Selected:  utils.Pointer(false),
					Available: utils.Pointer(false),
					Capabilities: []management.EnumNotificationsSettingsPhoneDeliverySettingsCustomNumbersCapability{
						management.ENUMNOTIFICATIONSSETTINGSPHONEDELIVERYSETTINGSCUSTOMNUMBERSCAPABILITY_SMS,
						management.ENUMNOTIFICATIONSSETTINGSPHONEDELIVERYSETTINGSCUSTOMNUMBERSCAPABILITY_VOICE,
					},
				},
				{
					Type:      management.ENUMNOTIFICATIONSSETTINGSPHONEDELIVERYSETTINGSCUSTOMNUMBERSTYPE_TOLL_FREE,
					Number:    "18661234567",
					Selected:  utils.Pointer(false),
					Available: utils.Pointer(false),
					Capabilities: []management.EnumNotificationsSettingsPhoneDeliverySettingsCustomNumbersCapability{
						management.ENUMNOTIFICATIONSSETTINGSPHONEDELIVERYSETTINGSCUSTOMNUMBERSCAPABILITY_SMS,
						management.ENUMNOTIFICATIONSSETTINGSPHONEDELIVERYSETTINGSCUSTOMNUMBERSCAPABILITY_VOICE,
					},
					SupportedCountries: []string{
						"US",
						"CA",
					},
				},
			},
		},
	}

	request = request.NotificationsSettingsPhoneDeliverySettings(clientStruct)

	resource, response, err := request.Execute()
	ok, err := common.HandleClientResponse(response, err, "CreatePhoneDeliverySettings", resourceType)
	if err != nil {
		t.Errorf("Failed to execute PingOne client function\nResponse Status: %s\nResponse Body: %s\nError: %v", response.Status, response.Body, err)

		return testutils_resource.ResourceInfo{}
	}
	if !ok {
		t.Errorf("Failed to execute PingOne client function\nResponse Status: %s\nResponse Body: %s", response.Status, response.Body)

		return testutils_resource.ResourceInfo{}
	}

	return testutils_resource.ResourceInfo{
		DeletionIds: []string{
			*resource.NotificationsSettingsPhoneDeliverySettingsCustom.Id,
		},
		CreationInfo: map[testutils_resource.ResourceCreationInfoType]string{
			testutils_resource.ENUM_ID:   *resource.NotificationsSettingsPhoneDeliverySettingsCustom.Id,
			testutils_resource.ENUM_NAME: resource.NotificationsSettingsPhoneDeliverySettingsCustom.Name,
		},
	}
}

func deletePhoneDeliverySettings(t *testing.T, clientInfo *connector.ClientInfo, resourceType string, ids ...string) {
	t.Helper()

	if len(ids) != 1 {
		t.Errorf("Unexpected number of arguments provided to deletePhoneDeliverySettings(): %v", ids)

		return
	}

	request := clientInfo.PingOneApiClient.ManagementAPIClient.PhoneDeliverySettingsApi.DeletePhoneDeliverySettings(clientInfo.PingOneContext, clientInfo.PingOneExportEnvironmentID, ids[0])

	response, err := request.Execute()
	ok, err := common.HandleClientResponse(response, err, "DeletePhoneDeliverySettings", resourceType)
	if err != nil {
		t.Errorf("Failed to execute PingOne client function\nResponse Status: %s\nResponse Body: %s\nError: %v", response.Status, response.Body, err)

		return
	}
	if !ok {
		t.Errorf("Failed to execute PingOne client function\nResponse Status: %s\nResponse Body: %s", response.Status, response.Body)

		return
	}
}
